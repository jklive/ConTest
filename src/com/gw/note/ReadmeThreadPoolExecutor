线程池：

线程池的主要特点

-》 线程可以复用 线程任务跑完马上接下一个任务
-》 控制线程数量 有最大线程数，可以控制并发数量，超出后拒绝访问
-》 可以很好的管理线程 内部调优

为什么要用线程池：

-》 线程可以复用，避免了没有限制的创建线程，降低资源损耗
-》 可以很好的管理线程，使用线程池可以内部统一的调优，管理，监控
-》 提高速度，任务来了直接在线程上跑，避免了线程创建的时间


Java泛型中标志符的含义

E element 在集合中使用，表示元素
T type  指java类
K key 指键
V value 指 值
R return 指返回值
N number 数值类型


线程池运行原理

当任务放进threadpool.execute方法中，线程池马上创建线程执行这些任务
若任务数量小于默认线程数，则创建默认线程数量的线程执行任务，若任务超过了该数量，则剩余任务在阻塞对列里等候
若阻塞队列已满，则开辟新的线程执行任务，一个线程执行完任务后，会马上运行下一个任务
当线程数达到了最大线程数，且此时阻塞队列已满，再有任务进来，会执行拒绝策略
当任务数量慢慢减少，一段时间（即空余线程存货时间）一个线程没有执行任务且此时线程数大于默认线程数，该线程会被终止
线程池会慢慢缩容，最终缩到默认线程池的大小



默认四种拒绝策略


Java内置核心四大函数式接口

consumer<t> 消费型接口 传入参数t 没有返回值
supplier<r> 供给型接口，不穿参数，有返回值
function<t,r> 函数式接口，传入参数t，返回值r
predicate<t> 断定型接口，传入参数t,返回boolean值



















